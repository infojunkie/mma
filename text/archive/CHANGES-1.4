
A number of code fixes have been made to the Aria track. Chromatic
 now works properly, CHORD scaletype now really selected by default,
 and an enhanced random direction (now you can set direction to
 r, rr, rrr, or rrrr. The docs for the Aria have been updated and
 should now match reality. Also, Arias were not handled properly when
 grooves were changed.

Alltracks: This command no longer effects SOLO, MELODY and ARIA tracks
 unless they are specified. I think this (now) makes sense.

Mallet: When attempting to turn this off (rate=0) things didn't work out.

** November 10, 2007 -- released test/dev version 1.4a

Added STRUM capabilities to all tracks (except DRUMS). Increased strum
 range. Strum can have a range for randomizing, eg. Chord Strum 20,30.
 See the fine manual. Direction wasn't working at all with CHORD + STRUM.

I finally figured out how to get rid of the ugly `` '' quotes generated by
 latex2html. Two steps are required:

    1. have an init file $HOME/.latex2html-init and make sure it has the line:
          $USE_CURLY_QUOTES = 1;

    2. add the following command line option to latex2html:
          -html_version 4.0,latin2,unicode

 I must say it looks much nicer!

Due to a parser change the syntax for the LYRIC command has changed a bit. The SET
 directive no longer needs to be the last item on the line. However, you cannot
 have an "=" in a lyric (does this ever happen??). So, the line:

    Lyric Set This is Split=Bar a lyric 

 will be accepted. The lyric is actually "This is lyric" and the option "Split=bar"
 will be set.

VoiceVolTr and DrumVolTr were hopelessly broken. I think they now work as advertised.

PATCH LIST commmand no longer craps out with an error.

MIDINOTE -- a whole new set of midi instructions can be used to insert
 controller events and note data into a track. Please read the fine
 manual for details. This is major addition to MMA!

** February 9, 2009 -- released test/developer version 1.4c

Added command line options -b and -B. This limits generation to the specifed
 range of bar numbers. Bar numbers are specifed as N1-N2 or N1,N2,Nn
 or as a combinate like N1-N2,N3-N4,N5,N6. NOTE: for -b the bar numbers are
 bar with "comment" numbers at the start of each line matching the
 list; for -B absolute bar numbers of the competed file are used.
 This option is VERY handy to compile a section of a file for debugging.

KEYSIG was not setting proper values in the MIDI file for minor keys.

Various variables setting filename, pathnames, midiplayer, etc. were
 not permitting spaces in them. You can now create filenames with
 spaces by using an "\x20". So, to set a midi file player "c:\program
 files\my midi player" you would do:

       setmidiplayer  c:\\program\x20files\\my\x20midi\x20player 

 and it'll now work. The play command now works with spaces in the binary
 as well as the filename. Any valid python escape sequences can be
 used. See the Paths section of the manual.

SetMidiPlayer now supports mulitple "fields". The first field is the
 program name, the rest are options. So, you can now do:

		SetMidiPlayer timidity -Ow -Opt 

 On Windows a empty setting is permitted (the default player is used
 on a windows platform in this case).

The -Dv option has been changed to -Ds. Whole bunch of sequence info
 dumped. This will probably disappear in the future.

A new doc option, -Dgh, has been added. This permits mma-libdoc to
 create pretty graphs of the sequences for each groove. The -Dxh
 option now includes some html comments for each groove so that
 mma-libdoc can parse out the groove and file data it needs.

The commands MidiCresc and MidiDeCresc have been added to fill out the
 raw midi suite. These 2 commands function the same as MidiVolume,
 i.e. them set the Midi Channel Volume for the synth.

** April 26, 2009 -- released test/developer version 1.4e

Fixed bug in volume settings. When there is a left-over (de)cresc the
  "future volume" stack is now cleared.

I have wrapped the metronome libarary files with a conditional
  NOMETRONOME. This is handy if you normally want a metronome beat to
  start your files but don't want it for performance. Just do "-S
  NoMetronome" on the command line and the metronomes are gone.

Sometimes I stupid things! Using the Python decode("escape-string")
  command to convert embedded \x20 sequences in filenames to spaces
  was a stupid thing. Problem comes up in windows platforms when
  python creates nice filenames like "foo\bar". The decode() now
  converts the "\b" to a single backspace character. Not what we
  wanted. So, now all mma filename go though a custom function which
  looks for "\x20" sequences and converts them. Appears to work. And
  (a plus) you don't (can't) use "\\" in windows path names; use a
  single "\". Please let me know if problems.

** July 2, 2009 -- released test/developer version 1.4f
 

** July 18, 2009 -- released final 1.4
